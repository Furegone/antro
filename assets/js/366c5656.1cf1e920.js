"use strict";(self.webpackChunkantro_del_furegone=self.webpackChunkantro_del_furegone||[]).push([[2065],{167:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/ASCENDENZA MISTA","title":"ASCENDENZA MISTA","description":"Le famiglie nel mondo di Daggerheart sono uniche quanto i popoli e le culture che lo abitano. L\u2019aspetto e le abilit\xe0 di chiunque possono essere modellati dal sangue, dalla magia, dalla vicinanza o da una variet\xe0 di altri fattori. Se decidi che il tuo personaggio \xe8 un discendente di pi\xf9 ancestries e vuoi rappresentarlo meccanicamente nel gioco, segui i passaggi seguenti:","source":"@site/docs/SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/ASCENDENZA MISTA.md","sourceDirName":"SRD/CREAZIONE PERSONAGGIO/ASCENDENZE","slug":"/SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/ASCENDENZA MISTA","permalink":"/antro/docs/SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/ASCENDENZA MISTA","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/ASCENDENZA MISTA.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ASCENDENZE","permalink":"/antro/docs/SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/"},"next":{"title":"CLANK","permalink":"/antro/docs/SRD/CREAZIONE PERSONAGGIO/ASCENDENZE/CLANK"}}');var t=n(4848),o=n(8453);const r={},s=void 0,c={},l=[];function d(e){const a={br:"br",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.p,{children:"Le famiglie nel mondo di Daggerheart sono uniche quanto i popoli e le culture che lo abitano. L\u2019aspetto e le abilit\xe0 di chiunque possono essere modellati dal sangue, dalla magia, dalla vicinanza o da una variet\xe0 di altri fattori. Se decidi che il tuo personaggio \xe8 un discendente di pi\xf9 ancestries e vuoi rappresentarlo meccanicamente nel gioco, segui i passaggi seguenti:"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Determina la Combinazione di Ascendenza"}),(0,t.jsx)(a.br,{}),"\n","Quando scegli un\u2019ascendenza alla creazione del personaggio, annota come il tuo personaggio si identifica nella sezione Eredit\xe0 della tua scheda personaggio. Ad esempio, se il tuo personaggio discende da goblin e orchi, potresti usare un termine ibrido, come \u201cgoblin-orc\u201d, per descrivere la tua ascendenza, elencare solo l\u2019ascendenza con cui ti identifichi pi\xf9 strettamente (ad esempio, solo \u201cgoblin\u201d o solo \u201corc\u201d), o inventare un nuovo termine, come \u201ctoothling\u201d."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Scegli Caratteristiche di Ascendenza"}),(0,t.jsx)(a.br,{}),"\n","Lavora con il tuo GM per scegliere due caratteristiche dalle ancestries nella linea di sangue del tuo personaggio. Devi scegliere la prima caratteristica da un\u2019ascendenza e la seconda da un\u2019altra. Annota entrambe su una nota che puoi tenere con le altre carte o accanto alla tua scheda personaggio. Ad esempio, se stai creando un goblin-orc, potresti prendere le caratteristiche \u201cPassi Sicuri\u201d e \u201cZanne\u201d o le caratteristiche \u201cRobusto\u201d e \u201cSenso del Pericolo\u201d. Non puoi prendere entrambe le caratteristiche \u201cPassi Sicuri\u201d e \u201cRobusta Tenacia\u201d, perch\xe9 queste sono entrambe le prime caratteristiche elencate sulle rispettive carte ascendenza. L\u2019heritage del tuo personaggio potrebbe includere pi\xf9 di due ancestries, ma scegli comunque caratteristiche solo da due. Puoi rappresentare ancestries aggiuntive attraverso il loro aspetto o la loro backstory."]})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>s});var i=n(6540);const t={},o=i.createContext(t);function r(e){const a=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:a},e.children)}}}]);